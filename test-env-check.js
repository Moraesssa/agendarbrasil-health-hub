// Teste simples para verificar se as vari√°veis est√£o configuradas
const webhookUrl = 'https://ulebotjrsgheybhpdnxd.supabase.co/functions/v1/stripe-webhook';

async function testEnvironmentCheck() {
  console.log('üîß TESTANDO CONFIGURA√á√ÉO DE VARI√ÅVEIS\n');

  try {
    // Fazer uma requisi√ß√£o simples para ver a resposta de erro
    const response = await fetch(webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'stripe-signature': 'test'
      },
      body: JSON.stringify({ test: true })
    });

    const responseText = await response.text();
    
    console.log(`üìä Status: ${response.status}`);
    console.log(`üìù Response: ${responseText}`);

    // Analisar a resposta
    if (responseText.includes('STRIPE_SECRET_KEY n√£o configurada')) {
      console.log('\n‚ùå PROBLEMA: STRIPE_SECRET_KEY n√£o est√° configurada no Supabase');
      console.log('   Solu√ß√£o: Adicionar no Dashboard do Supabase');
    } else if (responseText.includes('STRIPE_WEBHOOK_SECRET n√£o configurada')) {
      console.log('\n‚ùå PROBLEMA: STRIPE_WEBHOOK_SECRET n√£o est√° configurada no Supabase');
      console.log('   Solu√ß√£o: Adicionar no Dashboard do Supabase');
    } else if (responseText.includes('Configura√ß√£o inv√°lida')) {
      console.log('\n‚ùå PROBLEMA: Uma das vari√°veis n√£o est√° configurada');
      console.log('   Verificar ambas as vari√°veis no Supabase');
    } else if (responseText.includes('Signature inv√°lida')) {
      console.log('\n‚úÖ VARI√ÅVEIS CONFIGURADAS CORRETAMENTE!');
      console.log('   O erro de signature √© esperado com dados de teste');
      console.log('   O webhook est√° funcionando e pronto para receber eventos reais');
    } else {
      console.log('\nüîç Resposta inesperada - analisar:');
      console.log(responseText);
    }

    console.log('\nüìã PR√ìXIMOS PASSOS:');
    if (responseText.includes('Signature inv√°lida')) {
      console.log('‚úÖ Sistema configurado corretamente!');
      console.log('1. Fa√ßa um teste real de pagamento na aplica√ß√£o');
      console.log('2. Ou use a Stripe CLI para enviar eventos reais');
      console.log('3. Execute: node check-test-result.js ap√≥s o teste');
    } else {
      console.log('üîß Configurar vari√°veis no Supabase Dashboard:');
      console.log('   Settings ‚Üí Edge Functions ‚Üí Environment Variables');
      console.log('   STRIPE_SECRET_KEY = sk_test_[sua_chave]');
      console.log('   STRIPE_WEBHOOK_SECRET = whsec_rk7shhs0l9gNzegM4p40lc5yHe333bao');
    }

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

testEnvironmentCheck();