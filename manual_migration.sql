-- Create the notification_settings table
CREATE TABLE public.notification_settings (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    profile_id uuid NOT NULL,
    email_notifications boolean DEFAULT true NOT NULL,
    push_notifications boolean DEFAULT true NOT NULL,
    patient_reminders boolean DEFAULT true NOT NULL,
    new_messages boolean DEFAULT true NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT notification_settings_pkey PRIMARY KEY (id),
    CONSTRAINT notification_settings_profile_id_key UNIQUE (profile_id),
    CONSTRAINT notification_settings_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id) ON DELETE CASCADE
);

-- Add table and column comments
COMMENT ON TABLE public.notification_settings IS 'Stores user notification preferences.';
COMMENT ON COLUMN public.notification_settings.email_notifications IS 'Enable/disable email notifications.';
COMMENT ON COLUMN public.notification_settings.push_notifications IS 'Enable/disable push notifications.';
COMMENT ON COLUMN public.notification_settings.patient_reminders IS 'Enable/disable reminders for patients.';
COMMENT ON COLUMN public.notification_settings.new_messages IS 'Enable/disable notifications for new messages.';

-- Enable Row-Level Security
ALTER TABLE public.notification_settings ENABLE ROW LEVEL SECURITY;

-- Create RLS policies
CREATE POLICY "Authenticated users can view their own notification settings"
ON public.notification_settings
FOR SELECT
TO authenticated
USING (auth.uid() = profile_id);

CREATE POLICY "Authenticated users can update their own notification settings"
ON public.notification_settings
FOR UPDATE
TO authenticated
WITH CHECK (auth.uid() = profile_id);