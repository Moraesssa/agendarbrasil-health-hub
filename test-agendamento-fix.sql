-- ================================================================
-- SCRIPT DE TESTE - VALIDA√á√ÉO DO FIX DE AGENDAMENTO
-- ================================================================
-- Execute este script AP√ìS aplicar o FIX_AGENDAMENTO_HORARIOS.sql
-- para validar se tudo est√° funcionando corretamente
-- ================================================================

\echo '‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó'
\echo '‚ïë         TESTE DE VALIDA√á√ÉO - SISTEMA DE AGENDAMENTO          ‚ïë'
\echo '‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù'
\echo ''

-- ================================================================
-- TESTE 1: Verificar se as fun√ß√µes foram criadas
-- ================================================================

\echo 'üìã TESTE 1: Verificando fun√ß√µes RPC...'
\echo ''

SELECT 
  routine_name as "Fun√ß√£o",
  routine_type as "Tipo",
  CASE 
    WHEN routine_name IN ('get_doctor_schedule_v2', 'get_available_time_slots', 'reserve_appointment_v2') 
    THEN '‚úÖ OK'
    ELSE '‚ùå ERRO'
  END as "Status"
FROM information_schema.routines
WHERE routine_schema = 'public'
AND routine_name IN (
  'get_doctor_schedule_v2',
  'get_available_time_slots', 
  'reserve_appointment_v2',
  'get_specialties',
  'get_available_states',
  'get_available_cities',
  'get_doctors_by_location_and_specialty'
)
ORDER BY routine_name;

\echo ''
\echo '---'
\echo ''

-- ================================================================
-- TESTE 2: Verificar estrutura de dados
-- ================================================================

\echo 'üìä TESTE 2: Verificando estrutura de dados...'
\echo ''

-- M√©dicos cadastrados
SELECT 
  'üë®‚Äç‚öïÔ∏è M√©dicos cadastrados' as "Categoria",
  COUNT(*) as "Total",
  CASE WHEN COUNT(*) > 0 THEN '‚úÖ OK' ELSE '‚ö†Ô∏è NENHUM M√âDICO' END as "Status"
FROM medicos;

-- Locais de atendimento
SELECT 
  'üè• Locais de atendimento ativos' as "Categoria",
  COUNT(*) as "Total",
  CASE WHEN COUNT(*) > 0 THEN '‚úÖ OK' ELSE '‚ö†Ô∏è NENHUM LOCAL' END as "Status"
FROM locais_atendimento
WHERE ativo = true;

-- Hor√°rios de funcionamento
SELECT 
  '‚è∞ Hor√°rios de funcionamento' as "Categoria",
  COUNT(*) as "Total",
  CASE WHEN COUNT(*) > 0 THEN '‚úÖ OK' ELSE '‚ö†Ô∏è NENHUM HOR√ÅRIO' END as "Status"
FROM horarios_funcionamento
WHERE ativo = true;

\echo ''
\echo '---'
\echo ''

-- ================================================================
-- TESTE 3: Verificar m√©dicos com configura√ß√£o completa
-- ================================================================

\echo 'üîç TESTE 3: M√©dicos com configura√ß√£o completa...'
\echo ''

SELECT 
  m.id as "ID M√©dico",
  p.display_name as "Nome",
  m.especialidades[1] as "Especialidade",
  COUNT(DISTINCT la.id) as "Locais",
  COUNT(DISTINCT hf.id) as "Hor√°rios",
  CASE 
    WHEN COUNT(DISTINCT la.id) > 0 AND COUNT(DISTINCT hf.id) > 0 
    THEN '‚úÖ COMPLETO'
    WHEN COUNT(DISTINCT la.id) > 0 
    THEN '‚ö†Ô∏è SEM HOR√ÅRIOS'
    ELSE '‚ùå SEM LOCAIS'
  END as "Status"
FROM medicos m
JOIN profiles p ON m.user_id = p.id
LEFT JOIN locais_atendimento la ON la.medico_id = m.id AND la.ativo = true
LEFT JOIN horarios_funcionamento hf ON hf.medico_id = m.id AND hf.ativo = true
GROUP BY m.id, p.display_name, m.especialidades
ORDER BY "Status" DESC, p.display_name
LIMIT 10;

\echo ''
\echo '---'
\echo ''

-- ================================================================
-- TESTE 4: Testar fun√ß√£o get_doctor_schedule_v2
-- ================================================================

\echo 'üß™ TESTE 4: Testando get_doctor_schedule_v2...'
\echo ''

DO $$
DECLARE
  v_doctor_id UUID;
  v_doctor_name TEXT;
  v_test_date DATE;
  v_result JSONB;
  v_locations_count INTEGER;
BEGIN
  -- Pegar primeiro m√©dico com hor√°rios configurados
  SELECT m.id, p.display_name INTO v_doctor_id, v_doctor_name
  FROM medicos m
  JOIN profiles p ON m.user_id = p.id
  WHERE EXISTS (
    SELECT 1 FROM horarios_funcionamento hf
    WHERE hf.medico_id = m.id AND hf.ativo = true
  )
  LIMIT 1;
  
  IF v_doctor_id IS NULL THEN
    RAISE NOTICE '‚ö†Ô∏è Nenhum m√©dico com hor√°rios configurados encontrado';
    RAISE NOTICE '   Configure hor√°rios para pelo menos um m√©dico para testar';
    RETURN;
  END IF;
  
  -- Data de teste (pr√≥xima segunda-feira)
  v_test_date := CURRENT_DATE + ((8 - EXTRACT(DOW FROM CURRENT_DATE)::INTEGER) % 7);
  
  -- Testar fun√ß√£o
  SELECT get_doctor_schedule_v2(v_doctor_id, v_test_date) INTO v_result;
  
  -- Contar locais retornados
  SELECT jsonb_array_length(v_result->'locations') INTO v_locations_count;
  
  RAISE NOTICE '‚úÖ Teste executado com sucesso!';
  RAISE NOTICE '   M√©dico: % (ID: %)', v_doctor_name, v_doctor_id;
  RAISE NOTICE '   Data: %', v_test_date;
  RAISE NOTICE '   Locais retornados: %', v_locations_count;
  
  IF v_locations_count > 0 THEN
    RAISE NOTICE '   Status: ‚úÖ FUNCIONANDO';
  ELSE
    RAISE NOTICE '   Status: ‚ö†Ô∏è SEM HOR√ÅRIOS DISPON√çVEIS';
  END IF;
  
EXCEPTION
  WHEN OTHERS THEN
    RAISE NOTICE '‚ùå Erro ao testar fun√ß√£o: %', SQLERRM;
END $$;

\echo ''
\echo '---'
\echo ''

-- ================================================================
-- TESTE 5: Testar fun√ß√£o fallback get_available_time_slots
-- ================================================================

\echo 'üß™ TESTE 5: Testando get_available_time_slots (fallback)...'
\echo ''

DO $$
DECLARE
  v_doctor_id UUID;
  v_doctor_name TEXT;
  v_test_date DATE;
  v_result JSONB;
  v_locations_count INTEGER;
BEGIN
  -- Pegar primeiro m√©dico
  SELECT m.id, p.display_name INTO v_doctor_id, v_doctor_name
  FROM medicos m
  JOIN profiles p ON m.user_id = p.id
  LIMIT 1;
  
  IF v_doctor_id IS NULL THEN
    RAISE NOTICE '‚ö†Ô∏è Nenhum m√©dico encontrado';
    RETURN;
  END IF;
  
  -- Data de teste (amanh√£)
  v_test_date := CURRENT_DATE + 1;
  
  -- Testar fun√ß√£o fallback
  SELECT get_available_time_slots(v_doctor_id, v_test_date, 8, 18, 30) INTO v_result;
  
  -- Contar locais retornados
  SELECT jsonb_array_length(v_result->'locations') INTO v_locations_count;
  
  RAISE NOTICE '‚úÖ Teste executado com sucesso!';
  RAISE NOTICE '   M√©dico: % (ID: %)', v_doctor_name, v_doctor_id;
  RAISE NOTICE '   Data: %', v_test_date;
  RAISE NOTICE '   Locais retornados: %', v_locations_count;
  RAISE NOTICE '   Status: ‚úÖ FUNCIONANDO (hor√°rios padr√£o 8h-18h)';
  
EXCEPTION
  WHEN OTHERS THEN
    RAISE NOTICE '‚ùå Erro ao testar fun√ß√£o: %', SQLERRM;
END $$;

\echo ''
\echo '---'
\echo ''

-- ================================================================
-- TESTE 6: Verificar permiss√µes RLS
-- ================================================================

\echo 'üîí TESTE 6: Verificando pol√≠ticas RLS...'
\echo ''

SELECT 
  schemaname as "Schema",
  tablename as "Tabela",
  policyname as "Pol√≠tica",
  CASE 
    WHEN cmd = 'SELECT' THEN 'üëÅÔ∏è SELECT'
    WHEN cmd = 'INSERT' THEN '‚ûï INSERT'
    WHEN cmd = 'UPDATE' THEN '‚úèÔ∏è UPDATE'
    WHEN cmd = 'DELETE' THEN 'üóëÔ∏è DELETE'
    ELSE cmd
  END as "Comando",
  CASE 
    WHEN roles::text LIKE '%authenticated%' THEN '‚úÖ OK'
    ELSE '‚ö†Ô∏è VERIFICAR'
  END as "Status"
FROM pg_policies
WHERE schemaname = 'public'
AND tablename IN ('consultas', 'locais_atendimento', 'horarios_funcionamento', 'medicos', 'pacientes')
ORDER BY tablename, cmd;

\echo ''
\echo '---'
\echo ''

-- ================================================================
-- RESUMO FINAL
-- ================================================================

\echo '‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó'
\echo '‚ïë                      RESUMO DOS TESTES                        ‚ïë'
\echo '‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù'
\echo ''

DO $$
DECLARE
  v_functions_ok INTEGER;
  v_doctors_count INTEGER;
  v_locations_count INTEGER;
  v_schedules_count INTEGER;
  v_status TEXT;
BEGIN
  -- Contar fun√ß√µes
  SELECT COUNT(*) INTO v_functions_ok
  FROM information_schema.routines
  WHERE routine_schema = 'public'
  AND routine_name IN ('get_doctor_schedule_v2', 'get_available_time_slots', 'reserve_appointment_v2');
  
  -- Contar dados
  SELECT COUNT(*) INTO v_doctors_count FROM medicos;
  SELECT COUNT(*) INTO v_locations_count FROM locais_atendimento WHERE ativo = true;
  SELECT COUNT(*) INTO v_schedules_count FROM horarios_funcionamento WHERE ativo = true;
  
  RAISE NOTICE 'üìä ESTAT√çSTICAS:';
  RAISE NOTICE '   Fun√ß√µes RPC criadas: %/3', v_functions_ok;
  RAISE NOTICE '   M√©dicos cadastrados: %', v_doctors_count;
  RAISE NOTICE '   Locais ativos: %', v_locations_count;
  RAISE NOTICE '   Hor√°rios configurados: %', v_schedules_count;
  RAISE NOTICE '';
  
  -- Determinar status geral
  IF v_functions_ok = 3 AND v_doctors_count > 0 AND v_locations_count > 0 THEN
    IF v_schedules_count > 0 THEN
      v_status := '‚úÖ SISTEMA PRONTO PARA USO';
    ELSE
      v_status := '‚ö†Ô∏è CONFIGURE HOR√ÅRIOS DOS M√âDICOS';
    END IF;
  ELSIF v_functions_ok = 3 THEN
    v_status := '‚ö†Ô∏è CADASTRE M√âDICOS E LOCAIS';
  ELSE
    v_status := '‚ùå EXECUTE O SCRIPT DE CORRE√á√ÉO';
  END IF;
  
  RAISE NOTICE 'üéØ STATUS GERAL: %', v_status;
  RAISE NOTICE '';
  
  IF v_status LIKE '%PRONTO%' THEN
    RAISE NOTICE '‚úÖ Tudo certo! Voc√™ pode testar o agendamento em /agendamento';
  ELSIF v_status LIKE '%CONFIGURE%' THEN
    RAISE NOTICE '‚ö†Ô∏è Pr√≥ximo passo: Configure os hor√°rios de funcionamento dos m√©dicos';
    RAISE NOTICE '   Use a interface de gerenciamento ou execute:';
    RAISE NOTICE '   INSERT INTO horarios_funcionamento (medico_id, local_id, dia_semana, hora_inicio, hora_fim, ativo)';
    RAISE NOTICE '   VALUES ([medico_id], [local_id], 1, ''08:00'', ''18:00'', true);';
  ELSIF v_status LIKE '%CADASTRE%' THEN
    RAISE NOTICE '‚ö†Ô∏è Pr√≥ximo passo: Cadastre m√©dicos e locais de atendimento';
  ELSE
    RAISE NOTICE '‚ùå Execute o script FIX_AGENDAMENTO_HORARIOS.sql primeiro';
  END IF;
END $$;

\echo ''
\echo '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê'
\echo ''
